@using Microsoft.AspNetCore.Identity
@inject SignInManager<BlogUser> SignInManager
@inject UserManager<BlogUser> UserManager
<form asp-area="Identity" id="Identitylogout" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
    <ul class="navbar-nav ml-auto">

        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index"><span class="iconify" data-icon="ant-design:user-outlined" data-inline="true"></span> Hello @((await UserManager.GetUserAsync(User)).FullName)</a>
            </li>
            <li class="nav-item">
                <button type="submit" class="nav-link btn" style="color:white;font-size:12px;"><span class="iconify" data-icon="ion:log-out-sharp" data-inline="true"></span> Logout</button>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register"><span class="iconify" data-icon="fluent:arrow-bounce-16-filled" data-inline="true"></span> Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login"><span class="iconify" data-icon="ion:log-in" data-inline="true"></span> Login</a>
            </li>
        }

    </ul>
</form>